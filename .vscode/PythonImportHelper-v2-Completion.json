[
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "iAnimal",
        "importPath": "modelos.iAnimal",
        "description": "modelos.iAnimal",
        "isExtraImport": true,
        "detail": "modelos.iAnimal",
        "documentation": {}
    },
    {
        "label": "Animal",
        "importPath": "modelos.animal",
        "description": "modelos.animal",
        "isExtraImport": true,
        "detail": "modelos.animal",
        "documentation": {}
    },
    {
        "label": "Boa_constricor",
        "importPath": "boa_constrictor",
        "description": "boa_constrictor",
        "isExtraImport": true,
        "detail": "boa_constrictor",
        "documentation": {}
    },
    {
        "label": "Huron",
        "importPath": "huron",
        "description": "huron",
        "isExtraImport": true,
        "detail": "huron",
        "documentation": {}
    },
    {
        "label": "Guarderia",
        "importPath": "modelos.guarderia",
        "description": "modelos.guarderia",
        "isExtraImport": true,
        "detail": "modelos.guarderia",
        "documentation": {}
    },
    {
        "label": "Animal_exotico",
        "importPath": "modelos.animal_exotico",
        "description": "modelos.animal_exotico",
        "isExtraImport": true,
        "detail": "modelos.animal_exotico",
        "documentation": {}
    },
    {
        "label": "Animal_exotico",
        "importPath": "modelos.animal_exotico",
        "description": "modelos.animal_exotico",
        "isExtraImport": true,
        "detail": "modelos.animal_exotico",
        "documentation": {}
    },
    {
        "label": "unittest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "unittest",
        "description": "unittest",
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "Boa_constricor",
        "importPath": "modelos.boa_constrictor",
        "description": "modelos.boa_constrictor",
        "isExtraImport": true,
        "detail": "modelos.boa_constrictor",
        "documentation": {}
    },
    {
        "label": "Boa_constricor",
        "importPath": "modelos.boa_constrictor",
        "description": "modelos.boa_constrictor",
        "isExtraImport": true,
        "detail": "modelos.boa_constrictor",
        "documentation": {}
    },
    {
        "label": "Huron",
        "importPath": "modelos.huron",
        "description": "modelos.huron",
        "isExtraImport": true,
        "detail": "modelos.huron",
        "documentation": {}
    },
    {
        "label": "Animal",
        "kind": 6,
        "importPath": "modelos.animal",
        "description": "modelos.animal",
        "peekOfCode": "class Animal(iAnimal, ABC):\n    def __init__(self, nombre : str, peso : float, edad : int):\n       self.nombre = nombre\n       self.peso = peso\n       self.edad  = edad\n       self.kilos_comidos = 0\n    def get_kilos_comidos(self):\n        return self.kilos_comidos\n    def set_kilos_comidos(self, value):\n        self.kilos_comidos = value",
        "detail": "modelos.animal",
        "documentation": {}
    },
    {
        "label": "Animal_exotico",
        "kind": 6,
        "importPath": "modelos.animal_exotico",
        "description": "modelos.animal_exotico",
        "peekOfCode": "class Animal_exotico(Animal, ABC):\n    def __init__(self, nombre:str, peso: float, edad : int, pais_origen:str, impuestos:float):\n        super().__init__(nombre, peso, edad)\n        self._pais_origen = pais_origen\n        self._impuestos =impuestos\n        self.set_kilos_comidos(0)\n    @property\n    def pais_origen(self): \n        return self._pais_origen\n    @pais_origen.setter",
        "detail": "modelos.animal_exotico",
        "documentation": {}
    },
    {
        "label": "boa",
        "kind": 5,
        "importPath": "modelos.app",
        "description": "modelos.app",
        "peekOfCode": "boa = Boa_constricor('Boa 1', 34, 2, 'Kenia', 2000, 0)\nprint(boa.calcular_flete())\nboa.comer_ratones()\nprint(boa.get_ratones_comidos())\nboa.comer_ratones()\nprint(boa.get_ratones_comidos())\nprint(boa.hacer_sonido())\nboa.comer(30)\nprint(boa.get_kilos_comidos())\nhuron = Huron('Huron 1', 15, 2, 'Ecuador', 200)",
        "detail": "modelos.app",
        "documentation": {}
    },
    {
        "label": "huron",
        "kind": 5,
        "importPath": "modelos.app",
        "description": "modelos.app",
        "peekOfCode": "huron = Huron('Huron 1', 15, 2, 'Ecuador', 200)\nprint(huron.calcular_flete())\nhuron.comer(230)\nprint(huron.get_kilos_comidos())\nprint(huron.hacer_sonido())\nguarderia = Guarderia()\nguarderia.alimentar_boa(guarderia.crear_boas()[0])",
        "detail": "modelos.app",
        "documentation": {}
    },
    {
        "label": "guarderia",
        "kind": 5,
        "importPath": "modelos.app",
        "description": "modelos.app",
        "peekOfCode": "guarderia = Guarderia()\nguarderia.alimentar_boa(guarderia.crear_boas()[0])",
        "detail": "modelos.app",
        "documentation": {}
    },
    {
        "label": "Boa_constricor",
        "kind": 6,
        "importPath": "modelos.boa_constrictor",
        "description": "modelos.boa_constrictor",
        "peekOfCode": "class Boa_constricor(Animal_exotico):\n    def __init__(self, nombre, peso, edad, pais_origen, impuestos, ratones_comidos: int):\n        super().__init__(nombre, peso, edad, pais_origen, impuestos)\n        self._ratones_comidos = ratones_comidos\n    def get_ratones_comidos(self):\n        return self._ratones_comidos\n    def set_ratones_comidos(self, value):\n        self._ratones_comidos = value\n    def hacer_sonido(self):\n        return \"¡Tsss!\"",
        "detail": "modelos.boa_constrictor",
        "documentation": {}
    },
    {
        "label": "Huron",
        "kind": 6,
        "importPath": "modelos.huron",
        "description": "modelos.huron",
        "peekOfCode": "class Huron(Animal_exotico):\n    def __init__(self, nombre, peso, edad, pais_origen, impuestos):\n        super().__init__(nombre, peso, edad, pais_origen, impuestos)\n    def hacer_sonido(self):\n        return \"¡Eek Eek!\"",
        "detail": "modelos.huron",
        "documentation": {}
    },
    {
        "label": "iAnimal",
        "kind": 6,
        "importPath": "modelos.iAnimal",
        "description": "modelos.iAnimal",
        "peekOfCode": "class iAnimal(ABC):\n    @abstractmethod\n    def comer(self, kilos):\n        pass\n    @abstractmethod\n    def obtener_kilos_comidos(self, kilos):\n        pass",
        "detail": "modelos.iAnimal",
        "documentation": {}
    },
    {
        "label": "test_Boa",
        "kind": 6,
        "importPath": "pruebas.test_boa_constrictor",
        "description": "pruebas.test_boa_constrictor",
        "peekOfCode": "class test_Boa(unittest.TestCase):\n    def test_hacer_sonido(self):\n        boa  = Boa_constricor(edad=1, peso=23, pais_origen=\"Colombia\", impuestos=23, nombre=\"Boa 1\", ratones_comidos=2)\n        self.assertEqual(boa.hacer_sonido(), \"¡Tsss!\")\n    def test_calcular_flete(self):\n        boa  = Boa_constricor(edad=1, peso=23, pais_origen=\"Colombia\", impuestos=2, nombre=\"Boa 1\", ratones_comidos=2)\n        self.assertEqual(boa.calcular_flete(), 46)  \n    def test_alimentar_boa(self):\n        boa  = Boa_constricor(edad=1, peso=23, pais_origen=\"Colombia\", impuestos=2, nombre=\"Boa 1\", ratones_comidos=9)\n        boa.comer_ratones()",
        "detail": "pruebas.test_boa_constrictor",
        "documentation": {}
    },
    {
        "label": "test_Boa",
        "kind": 6,
        "importPath": "pruebas.test_huron_",
        "description": "pruebas.test_huron_",
        "peekOfCode": "class test_Boa(unittest.TestCase):\n    def test_hacer_sonido(self):\n        huron = Huron('Huron 1', 15, 2, 'Ecuador', 200)\n        self.assertEqual(huron.hacer_sonido(), \"¡Eek Eek!\")\n    def test_calcular_flete(self):\n        huron = Huron('Huron 1', 15, 2, 'Ecuador', 2)\n        self.assertEqual(huron.calcular_flete(), 30)",
        "detail": "pruebas.test_huron_",
        "documentation": {}
    },
    {
        "label": "Guarderia",
        "kind": 6,
        "importPath": "guarderia",
        "description": "guarderia",
        "peekOfCode": "class Guarderia():\n    def crear_boas(self) -> list:\n        boas = []\n        boa1 = Boa_constricor('Boa 1', 34, 2, 'Kenia', 2000, 9)\n        boa2= Boa_constricor('Boa 2', 34, 2, 'Kenia', 2000, 6)\n        boas.append(boa1)\n        boas.append(boa2)\n        return boas\n    def alimentar_boa(self, boa : Boa_constricor | None):\n        if(boa == None):",
        "detail": "guarderia",
        "documentation": {}
    }
]